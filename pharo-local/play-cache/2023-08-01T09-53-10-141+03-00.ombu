OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T09:53:19.846+03:00' ],		#self : OmReference [ '1' ]	},	#content : '(ZnServer startDefaultOn: 8080) \r    onRequestRespond: [ :request | \r        ZnResponse ok: (ZnEntity text: \'Hiya!\') ].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T09:54:18.621+03:00' ],		#self : OmReference [ '2' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\t\r\t\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T09:59:02.858+03:00' ],		#self : OmReference [ '3' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\t\r\tTranscript show: absoluteUrl\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T09:59:15.101+03:00' ],		#self : OmReference [ '4' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\tTranscript show: request absoluteUrl.\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:00:14.081+03:00' ],		#self : OmReference [ '5' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\tTranscript show: request absoluteUrl; cr.\r\tTranscript show: request absoluteUrl; cr.\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:00:31.095+03:00' ],		#self : OmReference [ '6' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\tTranscript show: request absoluteUrl; cr.\r\tTranscript show: request relativeUrl; cr.\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:00:57.718+03:00' ],		#self : OmReference [ '7' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\tTranscript show: request absoluteUrl; cr.\r\tTranscript show: request relativeUrl; cr.\r\tTranscript show: request requestLine; cr.\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:01:26.352+03:00' ],		#self : OmReference [ '8' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\tTranscript show: request absoluteUrl; cr.\r\tTranscript show: request relativeUrl; cr.\r\tTranscript show: request requestLine; cr.\r\tTranscript show: request url; cr.\r\tTranscript show: request uri; cr; cr.\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:03:28.901+03:00' ],		#self : OmReference [ '9' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\tTranscript show: request absoluteUrl; cr.\r\tTranscript show: request relativeUrl; cr.\r\tTranscript show: request requestLine ; cr.\r\tTranscript show: request url; cr.\r\tTranscript show: request uri; cr; cr.\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:03:36.411+03:00' ],		#self : OmReference [ '10' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\tTranscript show: request absoluteUrl; cr.\r\tTranscript show: request relativeUrl; cr.\r\tTranscript show: request requestLine uriPathQueryFragment; cr.\r\tTranscript show: request url; cr.\r\tTranscript show: request uri; cr; cr.\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:11:23.013+03:00' ],		#self : OmReference [ '11' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\t|uri path|\r\t\r\turi := request uri.\r\tpath := uri copyTo: (uri indexOf: \'?\').\r\t\r\tTranscript show: path.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:13:17.895+03:00' ],		#self : OmReference [ '12' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\t|path|\r\tpath := request uri path.\r\tTranscript show: path.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:13:38.611+03:00' ],		#self : OmReference [ '13' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\t|path|\r\tpath := request uri path.\r\tTranscript show: path; cr.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:14:09.876+03:00' ],		#self : OmReference [ '14' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\t|path|\r\tpath := request uri path.\r\tTranscript show: path; cr.\r\t\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:14:25.789+03:00' ],		#self : OmReference [ '15' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\t|path|\r\tpath := request uri path.\r\tTranscript show: path; cr.\r\t\r\t\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:14:46.511+03:00' ],		#self : OmReference [ '16' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\t|path|\r\tpath := request uri path.\r\tTranscript show: path; cr.\r\t\r\tTranscript show: path class.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:14:51.934+03:00' ],		#self : OmReference [ '17' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\t|path|\r\tpath := request uri path.\r\tTranscript show: path; cr.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:15:42.015+03:00' ],		#self : OmReference [ '18' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request |\r\t|path|\r\tpath := request uri path.\r\tTranscript show: path; cr.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T10:16:17.243+03:00' ],		#self : OmReference [ '19' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request |\r\t|path|\r\tpath := request uri path.\r\t\r\tTranscript show: path; cr.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T11:05:24.747+03:00' ],		#self : OmReference [ '18' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\tTranscript request uri; cr.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T11:05:58.061+03:00' ],		#self : OmReference [ '19' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\tTranscript show: request uri; cr.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T11:06:33.491+03:00' ],		#self : OmReference [ '20' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\tTranscript show: request queryKeys; cr.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T11:07:29.797+03:00' ],		#self : OmReference [ '21' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\tTranscript show: request mergedFields; cr.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T11:08:05.35+03:00' ],		#self : OmReference [ '22' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request | \r\tTranscript show: ((request mergedFields) at: \'a\'); cr.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T11:10:23.201+03:00' ],		#self : OmReference [ '23' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request |\r\t|model|\r\t\r\tmodel := MathModel build: request.\r\tTranscript show: model.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T11:12:05.906+03:00' ],		#self : OmReference [ '24' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request |\r\t|model|\r\t\r\tmodel := MathModel build: request.\r\tTranscript show: model printString.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T11:12:36.345+03:00' ],		#self : OmReference [ '25' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request |\r\t|model|\r\t\r\tmodel := MathModel build: request.\r\tTranscript show: model printString; cr.\r\t\r\tZnResponse ok: (ZnEntity text: \'Hiya!\') \r].'}OmEntry {	#tags : {		#timestamp : DateAndTime [ '2023-08-01T11:17:14.382+03:00' ],		#self : OmReference [ '26' ]	},	#content : '(ZnServer startDefaultOn: 8080) onRequestRespond: [ :request |\r\t|model result|\r\t\r\tmodel := MathModel build: request.\r\tresult := MathOperation plus: model.\r\t\r\tZnResponse ok: (ZnEntity text: result printString) \r].'}