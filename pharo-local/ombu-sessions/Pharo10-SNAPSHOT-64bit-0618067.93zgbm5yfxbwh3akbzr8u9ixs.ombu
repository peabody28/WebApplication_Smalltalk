OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-08-01T10:14:59.654+03:00' ],		#prior : OmReference [ 'Pharo10-SNAPSHOT-64bit-0618067.8ojzvffkxnpx3ulci654n4ynx', '8349' ],		#self : OmReference [ '1' ]	},	#content : EpSessionSnapshot {		#imageName : 'C:\\Users\\maksim.harbacheuski\\Documents\\Pharo\\images\\WebApplication\\WebApplication.image'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-08-01T10:15:02.249+03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpSessionSnapshot {		#imageName : 'C:\\Users\\maksim.harbacheuski\\Documents\\Pharo\\images\\WebApplication\\WebApplication.image'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-08-01T10:18:33.094+03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Controller,		#affectedPackageName : #Controller	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2023-08-01T10:18:33.096+03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Controller\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Controller\''			},			#name : #Controller,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Controller class\r\tinstanceVariableNames: \'\''				},				#name : #'Controller class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Controller,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Controller,			#package : #Controller,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:19:08.897+03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Controller\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Controller\''			},			#name : #Controller,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Controller class\r\tinstanceVariableNames: \'\''				},				#name : #'Controller class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Controller,					#isMetaSide : false				},				#parent : @7,				#content : 'Abstract class for all controllers',				#stamp : 'MaksimHarbacheuski 8/1/2023 10:19'			},			#classVariables : OrderedCollection [ ],			#category : #Controller,			#package : #Controller,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Abstract class for all controllers',		#oldStamp : '',		#newStamp : 'MaksimHarbacheuski 8/1/2023 10:19'	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:20:24.359+03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Controller',				#definitionSource : 'Controller subclass: #MathController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Controller\''			},			#name : #MathController,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MathController class\r\tinstanceVariableNames: \'\''				},				#name : #'MathController class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MathController,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Controller,			#package : #Controller,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:21:04.599+03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Controller',				#definitionSource : 'Controller subclass: #MathController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Controller\''			},			#name : #MathController,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MathController class\r\tinstanceVariableNames: \'\''				},				#name : #'MathController class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MathController,					#isMetaSide : false				},				#parent : @7,				#content : 'Math controller allow to execute math operations like Plus, Minus and other',				#stamp : 'MaksimHarbacheuski 8/1/2023 10:21'			},			#classVariables : OrderedCollection [ ],			#category : #Controller,			#package : #Controller,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Math controller allow to execute math operations like Plus, Minus and other',		#oldStamp : '',		#newStamp : 'MaksimHarbacheuski 8/1/2023 10:21'	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:22:12.738+03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Controller',				#definitionSource : 'Controller subclass: #StringController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Controller\''			},			#name : #StringController,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'StringController class\r\tinstanceVariableNames: \'\''				},				#name : #'StringController class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #StringController,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Controller,			#package : #Controller,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:22:45.854+03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Controller',				#definitionSource : 'Controller subclass: #StringController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Controller\''			},			#name : #StringController,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'StringController class\r\tinstanceVariableNames: \'\''				},				#name : #'StringController class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #StringController,					#isMetaSide : false				},				#parent : @7,				#content : 'String controller allow to made operation with string like ToUpper, ToLower and other',				#stamp : 'MaksimHarbacheuski 8/1/2023 10:22'			},			#classVariables : OrderedCollection [ ],			#category : #Controller,			#package : #Controller,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'String controller allow to made operation with string like ToUpper, ToLower and other',		#oldStamp : '',		#newStamp : 'MaksimHarbacheuski 8/1/2023 10:22'	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:24:01.542+03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'plus:to:',			#protocol : #'as yet unclassified',			#sourceCode : 'plus: a to: b\r\t^a + b',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:24',			#package : #Controller		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:24:12.052+03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'plus:to:',			#protocol : #'as yet unclassified',			#sourceCode : 'plus: a to: b\r\t^a + b',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:24',			#package : #Controller		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'plus:to:',			#protocol : #methods,			#sourceCode : 'plus: a to: b\r\t^a + b',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:24',			#package : #Controller		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:24:36.582+03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'minus:from:',			#protocol : #'as yet unclassified',			#sourceCode : 'minus: b from: a\r',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:24',			#package : #Controller		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:25:32.63+03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'plus:',			#protocol : #methods,			#sourceCode : 'plus: model\r\t^model a - model b',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:25',			#package : #Controller		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:25:36.265+03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'plus:to:',			#protocol : #methods,			#sourceCode : 'plus: a to: b\r\t^a + b',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:24',			#package : #Controller		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'plus:to:',			#protocol : #'as yet unclassified',			#sourceCode : 'plus: a to: b\r\t^a + b',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:24',			#package : #Controller		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:25:36.29+03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'plus:to:',			#protocol : #methods,			#sourceCode : 'plus: a to: b\r\t^a + b',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:24',			#package : #Controller		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:25:46.343+03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'minus:',			#protocol : #'as yet unclassified',			#sourceCode : 'minus: model\r\t^model a - model b\r',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:25',			#package : #Controller		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:25:50.684+03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'minus:from:',			#protocol : #'as yet unclassified',			#sourceCode : 'minus: b from: a\r',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:24',			#package : #Controller		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:25:53.498+03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'plus:',			#protocol : #methods,			#sourceCode : 'plus: model\r\t^model a - model b',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:25',			#package : #Controller		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'plus:',			#protocol : #methods,			#sourceCode : 'plus: model\r\t^model a + model b',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:25',			#package : #Controller		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:28:01.704+03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpCategoryAddition {		#classCategoryName : #WebApplication-Controllers,		#affectedPackageName : #WebApplication	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:28:09.188+03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpCategoryAddition {		#classCategoryName : #WebApplication-Models,		#affectedPackageName : #WebApplication	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:28:48.033+03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpCategoryAddition {		#classCategoryName : #WebApplication-Controller,		#affectedPackageName : #WebApplication	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:28:48.095+03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Controller,		#newCategory : 'WebApplication-Controller',		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Controller\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Controller\''			},			#name : #Controller,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Controller class\r\tinstanceVariableNames: \'\''				},				#name : #'Controller class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Controller,					#isMetaSide : false				},				#parent : @7,				#content : 'Abstract class for all controllers',				#stamp : 'MaksimHarbacheuski 8/1/2023 10:19'			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Controller,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:28:53.504+03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #WebApplication-Controller,		#newCategory : 'WebApplication-Controllers',		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Controller\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Controllers\''			},			#name : #Controller,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Controller class\r\tinstanceVariableNames: \'\''				},				#name : #'Controller class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Controller,					#isMetaSide : false				},				#parent : @7,				#content : 'Abstract class for all controllers',				#stamp : 'MaksimHarbacheuski 8/1/2023 10:19'			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Controllers,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:29:15.203+03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Controller,		#newCategory : 'WebApplication-Controllers',		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Controller',				#definitionSource : 'Controller subclass: #StringController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Controllers\''			},			#name : #StringController,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'StringController class\r\tinstanceVariableNames: \'\''				},				#name : #'StringController class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #StringController,					#isMetaSide : false				},				#parent : @7,				#content : 'String controller allow to made operation with string like ToUpper, ToLower and other',				#stamp : 'MaksimHarbacheuski 8/1/2023 10:22'			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Controllers,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:29:20.759+03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Controller,		#newCategory : 'WebApplication-Controllers',		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Controller',				#definitionSource : 'Controller subclass: #MathController\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Controllers\''			},			#name : #MathController,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MathController class\r\tinstanceVariableNames: \'\''				},				#name : #'MathController class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MathController,					#isMetaSide : false				},				#parent : @7,				#content : 'Math controller allow to execute math operations like Plus, Minus and other',				#stamp : 'MaksimHarbacheuski 8/1/2023 10:21'			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Controllers,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:30:05.737+03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Model',				#definitionSource : 'Model subclass: #MathPlusModel\r\tinstanceVariableNames: \'a b\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Models\''			},			#name : #MathPlusModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MathPlusModel,						#isMetaSide : false					},					#name : #a,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MathPlusModel,						#isMetaSide : false					},					#name : #b,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MathPlusModel class\r\tinstanceVariableNames: \'\''				},				#name : #'MathPlusModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MathPlusModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Models,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:30:34.579+03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'minus:',			#protocol : #'as yet unclassified',			#sourceCode : 'minus: model\r\t^model a - model b\r',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:25',			#package : #WebApplication		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathController,				#isMetaSide : false			},			#name : #'minus:',			#protocol : #methods,			#sourceCode : 'minus: model\r\t^model a - model b\r',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:25',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:31:46.162+03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toUpper:',			#protocol : #'as yet unclassified',			#sourceCode : 'toUpper: aString\r\t^aString toUppercaseString.',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:31',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:31:51.466+03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toUpper:',			#protocol : #'as yet unclassified',			#sourceCode : 'toUpper: aString\r\t^aString toUppercaseString.',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:31',			#package : #WebApplication		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toUpper:',			#protocol : #'as yet unclassified',			#sourceCode : 'toUpper: aString\r\t^aString toUppercase.',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:31',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:31:59.662+03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toUpper:',			#protocol : #'as yet unclassified',			#sourceCode : 'toUpper: aString\r\t^aString toUppercase.',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:31',			#package : #WebApplication		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toUpper:',			#protocol : #'as yet unclassified',			#sourceCode : 'toUpper: aString\r\t^aString uppercase.',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:31',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:32:11.415+03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toUpper:',			#protocol : #'as yet unclassified',			#sourceCode : 'toUpper: aString\r\t^aString uppercase.',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:31',			#package : #WebApplication		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toUpper:',			#protocol : #methods,			#sourceCode : 'toUpper: aString\r\t^aString uppercase.',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:31',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:32:35.879+03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toLower:',			#protocol : #'as yet unclassified',			#sourceCode : 'toLower: aString\r\t^aString lowercase ',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:32',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:32:43.31+03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toLower:',			#protocol : #'as yet unclassified',			#sourceCode : 'toLower: aString\r\t^aString lowercase ',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:32',			#package : #WebApplication		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toLower:',			#protocol : #methods,			#sourceCode : 'toLower: aString\r\t^aString lowercase ',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:32',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:33:31.86+03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Model',				#definitionSource : 'Model subclass: #MathModel\r\tinstanceVariableNames: \'a b\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Models\''			},			#name : #MathModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MathModel,						#isMetaSide : false					},					#name : #a,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MathModel,						#isMetaSide : false					},					#name : #b,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MathModel class\r\tinstanceVariableNames: \'\''				},				#name : #'MathModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MathModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Models,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:33:47.629+03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveClassRefactoring classNames: #(#MathPlusModel))'	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ],		#time : DateAndTime [ '2023-08-01T10:33:47.635+03:00' ],		#trigger : @3	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Model',				#definitionSource : 'Model subclass: #MathPlusModel\r\tinstanceVariableNames: \'a b\'\r\tclassVariableNames: \'\'\r\tpackage: #\'WebApplication-Models\''			},			#name : #MathPlusModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteMathPlusModel,						#isMetaSide : false					},					#name : #a,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteMathPlusModel,						#isMetaSide : false					},					#name : #b,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MathPlusModel class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteMathPlusModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteMathPlusModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Models,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:34:13.351+03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpCategoryAddition {		#classCategoryName : #'',		#affectedPackageName : #''	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:34:13.352+03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #StringModel\r\tinstanceVariableNames: \'data\'\r\tclassVariableNames: \'\'\r\tpackage: \'\''			},			#name : #StringModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #StringModel,						#isMetaSide : false					},					#name : #data,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'StringModel class\r\tinstanceVariableNames: \'\''				},				#name : #'StringModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #StringModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'',			#package : #'',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:34:29.017+03:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #'',		#newCategory : 'WebApplication-Models',		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #StringModel\r\tinstanceVariableNames: \'data\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Models\''			},			#name : #StringModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #StringModel,						#isMetaSide : false					},					#name : #data,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'StringModel class\r\tinstanceVariableNames: \'\''				},				#name : #'StringModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #StringModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Models,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:34:41.518+03:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Model',				#definitionSource : 'Model subclass: #MathModel\r\tinstanceVariableNames: \'a b\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Models\''			},			#name : #MathModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MathModel,						#isMetaSide : false					},					#name : #a,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MathModel,						#isMetaSide : false					},					#name : #b,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MathModel class\r\tinstanceVariableNames: \'\''				},				#name : #'MathModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MathModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Models,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #MathModel\r\tinstanceVariableNames: \'a b\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Models\''			},			#name : #MathModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MathModel,						#isMetaSide : false					},					#name : #a,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #MathModel,						#isMetaSide : false					},					#name : #b,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MathModel class\r\tinstanceVariableNames: \'\''				},				#name : #'MathModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MathModel,					#isMetaSide : false				},				#parent : @25,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Models,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:35:06.73+03:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toLower:',			#protocol : #methods,			#sourceCode : 'toLower: aString\r\t^aString lowercase ',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:32',			#package : #WebApplication		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toLower:',			#protocol : #methods,			#sourceCode : 'toLower: stringModel\r\t^stringModel data lowercase ',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:35',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:35:17.338+03:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toUpper:',			#protocol : #methods,			#sourceCode : 'toUpper: aString\r\t^aString uppercase.',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:31',			#package : #WebApplication		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #StringController,				#isMetaSide : false			},			#name : #'toUpper:',			#protocol : #methods,			#sourceCode : 'toUpper: stringModel\r\t^stringModel data uppercase.',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:35',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:36:53.053+03:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpCategoryAddition {		#classCategoryName : #WebApplication-Builders,		#affectedPackageName : #WebApplication	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:37:05.584+03:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #MathModelBulder\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Builders\''			},			#name : #MathModelBulder,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MathModelBulder class\r\tinstanceVariableNames: \'\''				},				#name : #'MathModelBulder class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MathModelBulder,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Builders,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:37:30.764+03:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #MathModelBulder\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Builders\''			},			#name : #MathModelBulder,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'MathModelBulder class\r\tinstanceVariableNames: \'\''				},				#name : #'MathModelBulder class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #MathModelBulder,					#isMetaSide : false				},				#parent : @7,				#content : 'Build a MathModel from ZincRequest data',				#stamp : 'MaksimHarbacheuski 8/1/2023 10:37'			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Builders,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Build a MathModel from ZincRequest data',		#oldStamp : '',		#newStamp : 'MaksimHarbacheuski 8/1/2023 10:37'	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:38:24.64+03:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MathModelBulder class',				#isMetaSide : true			},			#name : #'build:',			#protocol : #'as yet unclassified',			#sourceCode : 'build: zincRequest\r\t|mathModel|\r\tmathModel := MathModel new.',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:38',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:38:24.648+03:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MathModelBulder class',				#isMetaSide : true			},			#name : #'build:',			#protocol : #'as yet unclassified',			#sourceCode : 'build: zincRequest\r\t|mathModel|\r\tmathModel := MathModel new.',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:38',			#package : #WebApplication		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'MathModelBulder class',				#isMetaSide : true			},			#name : #'build:',			#protocol : #'instance creation',			#sourceCode : 'build: zincRequest\r\t|mathModel|\r\tmathModel := MathModel new.',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:38',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:39:13.174+03:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathModel,				#isMetaSide : false			},			#name : #'a:',			#protocol : #'as yet unclassified',			#sourceCode : 'a: anObject\r a := anObject',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:39',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:39:13.185+03:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathModel,				#isMetaSide : false			},			#name : #'a:',			#protocol : #'as yet unclassified',			#sourceCode : 'a: anObject\r a := anObject',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:39',			#package : #WebApplication		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathModel,				#isMetaSide : false			},			#name : #'a:',			#protocol : #accessing,			#sourceCode : 'a: anObject\r a := anObject',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:39',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:39:26.381+03:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathModel,				#isMetaSide : false			},			#name : #'b:',			#protocol : #'as yet unclassified',			#sourceCode : 'b: anObject\r\tb := anObject',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:39',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:39:26.405+03:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathModel,				#isMetaSide : false			},			#name : #'b:',			#protocol : #'as yet unclassified',			#sourceCode : 'b: anObject\r\tb := anObject',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:39',			#package : #WebApplication		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathModel,				#isMetaSide : false			},			#name : #'b:',			#protocol : #accessing,			#sourceCode : 'b: anObject\r\tb := anObject',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:39',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:39:44.956+03:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathModel,				#isMetaSide : false			},			#name : #a,			#protocol : #accessing,			#sourceCode : 'a\r\t^a',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:39',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:39:51.398+03:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathModel,				#isMetaSide : false			},			#name : #b,			#protocol : #'as yet unclassified',			#sourceCode : 'b\r\t^b',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:39',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:39:51.416+03:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathModel,				#isMetaSide : false			},			#name : #b,			#protocol : #'as yet unclassified',			#sourceCode : 'b\r\t^b',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:39',			#package : #WebApplication		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #MathModel,				#isMetaSide : false			},			#name : #b,			#protocol : #accessing,			#sourceCode : 'b\r\t^b',			#stamp : 'MaksimHarbacheuski 8/1/2023 10:39',			#package : #WebApplication		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:56:56.923+03:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #ModelBuilder\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'\''			},			#name : #ModelBuilder,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ModelBuilder class\r\tinstanceVariableNames: \'\''				},				#name : #'ModelBuilder class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ModelBuilder,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'',			#package : #'',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:57:43.994+03:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : 'SpTPresenterBuilder',				#superclassName : 'SpAbstractPresenter',				#definitionSource : 'SpAbstractPresenter << #SpPresenter\r\ttraits: {SpTPresenterBuilder};\r\tslots: {\r\t\t\t #application .\r\t\t\t #focusOrder .\r\t\t\t #contextKeyBindings => ObservableSlot .\r\t\t\t #windowIcon => ObservableSlot .\r\t\t\t #aboutText => ObservableSlot .\r\t\t\t #askOkToClose => ObservableSlot .\r\t\t\t #titleHolder => ObservableSlot .\r\t\t\t #additionalSubpresentersMap .\r\t\t\t #layout => ObservableSlot .\r\t\t\t #visible => ObservableSlot .\r\t\t\t #extent => ObservableSlot .\r\t\t\t #styles };\r\ttag: \'Base\';\r\tpackage: \'Spec2-Core\''			},			#name : #SpPresenter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #application,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #focusOrder,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #contextKeyBindings,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #windowIcon,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #aboutText,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #askOkToClose,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #titleHolder,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #additionalSubpresentersMap,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #layout,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #visible,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #extent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #styles,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : 'SpTPresenterBuilder classTrait',					#definitionSource : 'SpPresenter class\r\tuses: SpTPresenterBuilder classTrait\r\tinstanceVariableNames: \'\''				},				#name : #'SpPresenter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SpPresenter,					#isMetaSide : false				},				#parent : @7,				#content : '`SpPresenter` is an abstract class which represents an presenter made to be composed with other `SpPresenter` instances.\r\rOften, I am used to display other subclasses of `SpPresenter` or subclasses of `SpAbstractWidgetPresenter`.\r\rI collaborate with \r- `ObservableSlot` to manage some of my variables.\r- `SpLayout`\r- `SpWindowPresenter` or `SpDialogWindowPresenter` to display myself.\r\rA new subclass of `SpPresenter` must at least define `initializeWidgets` and `defaultSpec` on the class side.\r\rI provide the following methods\r- aboutText: set the text displayed in the About.\r- initializeWindow: to set the title, and other information related to the window.\r- extent: set the initial size of the window, alternative possibility is define again initialExtent, it must be called before have displayed the widget. \r- focusOrder: set an instance what manage the order of focus of the keyboard navigation.\r- bindKeyCombination:toAction: create a shortcut on keyboard what perform the block of the  action.\r- owner getter of my parent.\r- window getter of the window displaying me.\r\rOn my class side, I provide methods returning standard height and width for some elements.\r\r## Window\r\r- `SpPresenter>>#openWithSpec` instantiates a `SpWindowPresenter` using the lookup to found the layout to use.\r- `SpPresenter>>#openDialogWithSpec` instanciates a `SpDialogWindowPresenter` using the lookup to found the layout to use.\rTheir variants `openWithSpec:` and `openDialogWithSpec:` use the layout parameter.\r\rThese methods can be useful to manage the window\r- `SpPresenter>>#isDisplayed` returns true if the window of the widget is displayed\r- `SpPresenter>>#hasWindow` returns true if the widget have a window\r- `SpPresenter>>#centered` to center the window in the world.\r- `SpPresenter>>#delete` to delete the window.\r\r## Instantiation\r\r`SpPresenter>>#initializePresenters` is called by the initialize method, it should contain initialization of subwidgets.\r\rThe instantiation of a subwidget should use one of that way\r- `instantiate:` take a presenter class as parameter and return the created instance.\r- methods named \'new\' followed by a widget name are shortcut working with `instantiate:`\r\r```\r\tlist := self newList.\r\tlist2 := self instantiate: SpListPresenter\r```\r\rUsually, the subwidgets must be added in the focusOrder using something like \'self focusOrder add: accessor of  the  subwidget\'\r\r`SpPresenter>>#connectPresenters` is called by the initialize method after initializePresenters, it should manage interaction of subwidgets.\r\rMethods named \'when\' followed by an event provide hook to perform the action in parameter.\r\r### Note\rBe careful about code order if you are overriding initialize method.\rNormally in Spec initializing instance variables should be done BEFORE calling `super initialize` (so the opposite of the normal approach), because super initialize calls `initalizePresenters` and `connectPresenters` that normally would make use of those variables.\r\r## Layout\r\rAs a general principle refer to the subclasses of`SpExecutableLayout`.\r\r`defaultSpec` or a method containing the pragma `<spec: #default>` must be defined in the class side of my subclasses.\rIt contains information about how visually position its elements.\rIt possible to define more than one method to give the possibility to use another layout, by default the one containing the pragma will be used if it exists, if not `defaultSpec` will be used.\r\rDeveloper may also want to define instance level layouts. A good idiom is the following one:\r\r```\rSpMyPresenter >> initializePresenters\r\t... instantiate presenters ...\r\tself initializeLayout\r```\r\r```\rSpMyPresenter >> initializeLayout\r\tself layout: (SpXXLayout new add: ...; yourself)\r```\r\r\r\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Spec2-Core-Base,			#package : #Spec2-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'scripting - widgets'	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:57:43.995+03:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : 'SpTPresenterBuilder',				#superclassName : 'SpAbstractPresenter',				#definitionSource : 'SpAbstractPresenter << #SpPresenter\r\ttraits: {SpTPresenterBuilder};\r\tslots: {\r\t\t\t #application .\r\t\t\t #focusOrder .\r\t\t\t #contextKeyBindings => ObservableSlot .\r\t\t\t #windowIcon => ObservableSlot .\r\t\t\t #aboutText => ObservableSlot .\r\t\t\t #askOkToClose => ObservableSlot .\r\t\t\t #titleHolder => ObservableSlot .\r\t\t\t #additionalSubpresentersMap .\r\t\t\t #layout => ObservableSlot .\r\t\t\t #visible => ObservableSlot .\r\t\t\t #extent => ObservableSlot .\r\t\t\t #styles };\r\ttag: \'Base\';\r\tpackage: \'Spec2-Core\''			},			#name : #SpPresenter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #application,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #focusOrder,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #contextKeyBindings,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #windowIcon,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #aboutText,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #askOkToClose,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #titleHolder,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #additionalSubpresentersMap,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #layout,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #visible,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #extent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #styles,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : 'SpTPresenterBuilder classTrait',					#definitionSource : 'SpPresenter class\r\tuses: SpTPresenterBuilder classTrait\r\tinstanceVariableNames: \'\''				},				#name : #'SpPresenter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SpPresenter,					#isMetaSide : false				},				#parent : @7,				#content : '`SpPresenter` is an abstract class which represents an presenter made to be composed with other `SpPresenter` instances.\r\rOften, I am used to display other subclasses of `SpPresenter` or subclasses of `SpAbstractWidgetPresenter`.\r\rI collaborate with \r- `ObservableSlot` to manage some of my variables.\r- `SpLayout`\r- `SpWindowPresenter` or `SpDialogWindowPresenter` to display myself.\r\rA new subclass of `SpPresenter` must at least define `initializeWidgets` and `defaultSpec` on the class side.\r\rI provide the following methods\r- aboutText: set the text displayed in the About.\r- initializeWindow: to set the title, and other information related to the window.\r- extent: set the initial size of the window, alternative possibility is define again initialExtent, it must be called before have displayed the widget. \r- focusOrder: set an instance what manage the order of focus of the keyboard navigation.\r- bindKeyCombination:toAction: create a shortcut on keyboard what perform the block of the  action.\r- owner getter of my parent.\r- window getter of the window displaying me.\r\rOn my class side, I provide methods returning standard height and width for some elements.\r\r## Window\r\r- `SpPresenter>>#openWithSpec` instantiates a `SpWindowPresenter` using the lookup to found the layout to use.\r- `SpPresenter>>#openDialogWithSpec` instanciates a `SpDialogWindowPresenter` using the lookup to found the layout to use.\rTheir variants `openWithSpec:` and `openDialogWithSpec:` use the layout parameter.\r\rThese methods can be useful to manage the window\r- `SpPresenter>>#isDisplayed` returns true if the window of the widget is displayed\r- `SpPresenter>>#hasWindow` returns true if the widget have a window\r- `SpPresenter>>#centered` to center the window in the world.\r- `SpPresenter>>#delete` to delete the window.\r\r## Instantiation\r\r`SpPresenter>>#initializePresenters` is called by the initialize method, it should contain initialization of subwidgets.\r\rThe instantiation of a subwidget should use one of that way\r- `instantiate:` take a presenter class as parameter and return the created instance.\r- methods named \'new\' followed by a widget name are shortcut working with `instantiate:`\r\r```\r\tlist := self newList.\r\tlist2 := self instantiate: SpListPresenter\r```\r\rUsually, the subwidgets must be added in the focusOrder using something like \'self focusOrder add: accessor of  the  subwidget\'\r\r`SpPresenter>>#connectPresenters` is called by the initialize method after initializePresenters, it should manage interaction of subwidgets.\r\rMethods named \'when\' followed by an event provide hook to perform the action in parameter.\r\r### Note\rBe careful about code order if you are overriding initialize method.\rNormally in Spec initializing instance variables should be done BEFORE calling `super initialize` (so the opposite of the normal approach), because super initialize calls `initalizePresenters` and `connectPresenters` that normally would make use of those variables.\r\r## Layout\r\rAs a general principle refer to the subclasses of`SpExecutableLayout`.\r\r`defaultSpec` or a method containing the pragma `<spec: #default>` must be defined in the class side of my subclasses.\rIt contains information about how visually position its elements.\rIt possible to define more than one method to give the possibility to use another layout, by default the one containing the pragma will be used if it exists, if not `defaultSpec` will be used.\r\rDeveloper may also want to define instance level layouts. A good idiom is the following one:\r\r```\rSpMyPresenter >> initializePresenters\r\t... instantiate presenters ...\r\tself initializeLayout\r```\r\r```\rSpMyPresenter >> initializeLayout\r\tself layout: (SpXXLayout new add: ...; yourself)\r```\r\r\r\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Spec2-Core-Base,			#package : #Spec2-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'scripting - layouts'	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:57:43.996+03:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : 'SpTPresenterBuilder',				#superclassName : 'SpAbstractPresenter',				#definitionSource : 'SpAbstractPresenter << #SpPresenter\r\ttraits: {SpTPresenterBuilder};\r\tslots: {\r\t\t\t #application .\r\t\t\t #focusOrder .\r\t\t\t #contextKeyBindings => ObservableSlot .\r\t\t\t #windowIcon => ObservableSlot .\r\t\t\t #aboutText => ObservableSlot .\r\t\t\t #askOkToClose => ObservableSlot .\r\t\t\t #titleHolder => ObservableSlot .\r\t\t\t #additionalSubpresentersMap .\r\t\t\t #layout => ObservableSlot .\r\t\t\t #visible => ObservableSlot .\r\t\t\t #extent => ObservableSlot .\r\t\t\t #styles };\r\ttag: \'Base\';\r\tpackage: \'Spec2-Core\''			},			#name : #SpPresenter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #application,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #focusOrder,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #contextKeyBindings,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #windowIcon,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #aboutText,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #askOkToClose,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #titleHolder,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #additionalSubpresentersMap,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #layout,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #visible,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #extent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #styles,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : 'SpTPresenterBuilder classTrait',					#definitionSource : 'SpPresenter class\r\tuses: SpTPresenterBuilder classTrait\r\tinstanceVariableNames: \'\''				},				#name : #'SpPresenter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SpPresenter,					#isMetaSide : false				},				#parent : @7,				#content : '`SpPresenter` is an abstract class which represents an presenter made to be composed with other `SpPresenter` instances.\r\rOften, I am used to display other subclasses of `SpPresenter` or subclasses of `SpAbstractWidgetPresenter`.\r\rI collaborate with \r- `ObservableSlot` to manage some of my variables.\r- `SpLayout`\r- `SpWindowPresenter` or `SpDialogWindowPresenter` to display myself.\r\rA new subclass of `SpPresenter` must at least define `initializeWidgets` and `defaultSpec` on the class side.\r\rI provide the following methods\r- aboutText: set the text displayed in the About.\r- initializeWindow: to set the title, and other information related to the window.\r- extent: set the initial size of the window, alternative possibility is define again initialExtent, it must be called before have displayed the widget. \r- focusOrder: set an instance what manage the order of focus of the keyboard navigation.\r- bindKeyCombination:toAction: create a shortcut on keyboard what perform the block of the  action.\r- owner getter of my parent.\r- window getter of the window displaying me.\r\rOn my class side, I provide methods returning standard height and width for some elements.\r\r## Window\r\r- `SpPresenter>>#openWithSpec` instantiates a `SpWindowPresenter` using the lookup to found the layout to use.\r- `SpPresenter>>#openDialogWithSpec` instanciates a `SpDialogWindowPresenter` using the lookup to found the layout to use.\rTheir variants `openWithSpec:` and `openDialogWithSpec:` use the layout parameter.\r\rThese methods can be useful to manage the window\r- `SpPresenter>>#isDisplayed` returns true if the window of the widget is displayed\r- `SpPresenter>>#hasWindow` returns true if the widget have a window\r- `SpPresenter>>#centered` to center the window in the world.\r- `SpPresenter>>#delete` to delete the window.\r\r## Instantiation\r\r`SpPresenter>>#initializePresenters` is called by the initialize method, it should contain initialization of subwidgets.\r\rThe instantiation of a subwidget should use one of that way\r- `instantiate:` take a presenter class as parameter and return the created instance.\r- methods named \'new\' followed by a widget name are shortcut working with `instantiate:`\r\r```\r\tlist := self newList.\r\tlist2 := self instantiate: SpListPresenter\r```\r\rUsually, the subwidgets must be added in the focusOrder using something like \'self focusOrder add: accessor of  the  subwidget\'\r\r`SpPresenter>>#connectPresenters` is called by the initialize method after initializePresenters, it should manage interaction of subwidgets.\r\rMethods named \'when\' followed by an event provide hook to perform the action in parameter.\r\r### Note\rBe careful about code order if you are overriding initialize method.\rNormally in Spec initializing instance variables should be done BEFORE calling `super initialize` (so the opposite of the normal approach), because super initialize calls `initalizePresenters` and `connectPresenters` that normally would make use of those variables.\r\r## Layout\r\rAs a general principle refer to the subclasses of`SpExecutableLayout`.\r\r`defaultSpec` or a method containing the pragma `<spec: #default>` must be defined in the class side of my subclasses.\rIt contains information about how visually position its elements.\rIt possible to define more than one method to give the possibility to use another layout, by default the one containing the pragma will be used if it exists, if not `defaultSpec` will be used.\r\rDeveloper may also want to define instance level layouts. A good idiom is the following one:\r\r```\rSpMyPresenter >> initializePresenters\r\t... instantiate presenters ...\r\tself initializeLayout\r```\r\r```\rSpMyPresenter >> initializeLayout\r\tself layout: (SpXXLayout new add: ...; yourself)\r```\r\r\r\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Spec2-Core-Base,			#package : #Spec2-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*Spec2-Code'	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:57:43.997+03:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : 'SpTPresenterBuilder',				#superclassName : 'SpAbstractPresenter',				#definitionSource : 'SpAbstractPresenter << #SpPresenter\r\ttraits: {SpTPresenterBuilder};\r\tslots: {\r\t\t\t #application .\r\t\t\t #focusOrder .\r\t\t\t #contextKeyBindings => ObservableSlot .\r\t\t\t #windowIcon => ObservableSlot .\r\t\t\t #aboutText => ObservableSlot .\r\t\t\t #askOkToClose => ObservableSlot .\r\t\t\t #titleHolder => ObservableSlot .\r\t\t\t #additionalSubpresentersMap .\r\t\t\t #layout => ObservableSlot .\r\t\t\t #visible => ObservableSlot .\r\t\t\t #extent => ObservableSlot .\r\t\t\t #styles };\r\ttag: \'Base\';\r\tpackage: \'Spec2-Core\''			},			#name : #SpPresenter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #application,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #focusOrder,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #contextKeyBindings,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #windowIcon,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #aboutText,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #askOkToClose,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #titleHolder,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #additionalSubpresentersMap,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #layout,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #visible,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #extent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SpPresenter,						#isMetaSide : false					},					#name : #styles,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : 'SpTPresenterBuilder classTrait',					#definitionSource : 'SpPresenter class\r\tuses: SpTPresenterBuilder classTrait\r\tinstanceVariableNames: \'\''				},				#name : #'SpPresenter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SpPresenter,					#isMetaSide : false				},				#parent : @7,				#content : '`SpPresenter` is an abstract class which represents an presenter made to be composed with other `SpPresenter` instances.\r\rOften, I am used to display other subclasses of `SpPresenter` or subclasses of `SpAbstractWidgetPresenter`.\r\rI collaborate with \r- `ObservableSlot` to manage some of my variables.\r- `SpLayout`\r- `SpWindowPresenter` or `SpDialogWindowPresenter` to display myself.\r\rA new subclass of `SpPresenter` must at least define `initializeWidgets` and `defaultSpec` on the class side.\r\rI provide the following methods\r- aboutText: set the text displayed in the About.\r- initializeWindow: to set the title, and other information related to the window.\r- extent: set the initial size of the window, alternative possibility is define again initialExtent, it must be called before have displayed the widget. \r- focusOrder: set an instance what manage the order of focus of the keyboard navigation.\r- bindKeyCombination:toAction: create a shortcut on keyboard what perform the block of the  action.\r- owner getter of my parent.\r- window getter of the window displaying me.\r\rOn my class side, I provide methods returning standard height and width for some elements.\r\r## Window\r\r- `SpPresenter>>#openWithSpec` instantiates a `SpWindowPresenter` using the lookup to found the layout to use.\r- `SpPresenter>>#openDialogWithSpec` instanciates a `SpDialogWindowPresenter` using the lookup to found the layout to use.\rTheir variants `openWithSpec:` and `openDialogWithSpec:` use the layout parameter.\r\rThese methods can be useful to manage the window\r- `SpPresenter>>#isDisplayed` returns true if the window of the widget is displayed\r- `SpPresenter>>#hasWindow` returns true if the widget have a window\r- `SpPresenter>>#centered` to center the window in the world.\r- `SpPresenter>>#delete` to delete the window.\r\r## Instantiation\r\r`SpPresenter>>#initializePresenters` is called by the initialize method, it should contain initialization of subwidgets.\r\rThe instantiation of a subwidget should use one of that way\r- `instantiate:` take a presenter class as parameter and return the created instance.\r- methods named \'new\' followed by a widget name are shortcut working with `instantiate:`\r\r```\r\tlist := self newList.\r\tlist2 := self instantiate: SpListPresenter\r```\r\rUsually, the subwidgets must be added in the focusOrder using something like \'self focusOrder add: accessor of  the  subwidget\'\r\r`SpPresenter>>#connectPresenters` is called by the initialize method after initializePresenters, it should manage interaction of subwidgets.\r\rMethods named \'when\' followed by an event provide hook to perform the action in parameter.\r\r### Note\rBe careful about code order if you are overriding initialize method.\rNormally in Spec initializing instance variables should be done BEFORE calling `super initialize` (so the opposite of the normal approach), because super initialize calls `initalizePresenters` and `connectPresenters` that normally would make use of those variables.\r\r## Layout\r\rAs a general principle refer to the subclasses of`SpExecutableLayout`.\r\r`defaultSpec` or a method containing the pragma `<spec: #default>` must be defined in the class side of my subclasses.\rIt contains information about how visually position its elements.\rIt possible to define more than one method to give the possibility to use another layout, by default the one containing the pragma will be used if it exists, if not `defaultSpec` will be used.\r\rDeveloper may also want to define instance level layouts. A good idiom is the following one:\r\r```\rSpMyPresenter >> initializePresenters\r\t... instantiate presenters ...\r\tself initializeLayout\r```\r\r```\rSpMyPresenter >> initializeLayout\r\tself layout: (SpXXLayout new add: ...; yourself)\r```\r\r\r\r',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Spec2-Core-Base,			#package : #Spec2-Core,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'*Spec2-CommonWidgets'	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:57:53.462+03:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #System-Model-Base,		#newCategory : 'WebApplication-Models',		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Model\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Models\''			},			#name : #Model,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Model class\r\tinstanceVariableNames: \'\''				},				#name : #'Model class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Model,					#isMetaSide : false				},				#parent : @7,				#content : 'Provides optimized model support',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Models,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'MaksimHarbacheuski',		#time : DateAndTime [ '2023-08-01T10:57:53.463+03:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Model\r\tinstanceVariableNames: \'dependents announcer\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Models\''			},			#name : #Model,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Model,						#isMetaSide : false					},					#name : #dependents,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Model,						#isMetaSide : false					},					#name : #announcer,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Model class\r\tinstanceVariableNames: \'\''				},				#name : #'Model class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Model,					#isMetaSide : false				},				#parent : @7,				#content : 'Provides optimized model support',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Models,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Model\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'WebApplication-Models\''			},			#name : #Model,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Model class\r\tinstanceVariableNames: \'\''				},				#name : #'Model class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Model,					#isMetaSide : false				},				#parent : @25,				#content : 'Provides optimized model support',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #WebApplication-Models,			#package : #WebApplication,			#sharedPools : OrderedCollection [ ]		}	}}